// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220606234356_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("API.Data.Category", b =>
                {
                    b.Property<int>("IdCategory")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("State")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("IdCategory");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("API.Data.Country", b =>
                {
                    b.Property<int>("IdCountry")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("State")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("IdCountry");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("API.Data.Place", b =>
                {
                    b.Property<int>("IdPlace")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<decimal>("ApproximateExpenses")
                        .HasColumnType("decimal(6,2)");

                    b.Property<int?>("CategoryNavigationIdCategory")
                        .HasColumnType("int");

                    b.Property<int?>("CountryNavigationIdCountry")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<int>("Idcategory")
                        .HasColumnType("int");

                    b.Property<int>("Idcountry")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdPlace");

                    b.HasIndex("CategoryNavigationIdCategory");

                    b.HasIndex("CountryNavigationIdCountry");

                    b.ToTable("Places");
                });

            modelBuilder.Entity("API.Data.Place", b =>
                {
                    b.HasOne("API.Data.Category", "CategoryNavigation")
                        .WithMany("Places")
                        .HasForeignKey("CategoryNavigationIdCategory");

                    b.HasOne("API.Data.Country", "CountryNavigation")
                        .WithMany("Places")
                        .HasForeignKey("CountryNavigationIdCountry");

                    b.Navigation("CategoryNavigation");

                    b.Navigation("CountryNavigation");
                });

            modelBuilder.Entity("API.Data.Category", b =>
                {
                    b.Navigation("Places");
                });

            modelBuilder.Entity("API.Data.Country", b =>
                {
                    b.Navigation("Places");
                });
#pragma warning restore 612, 618
        }
    }
}
